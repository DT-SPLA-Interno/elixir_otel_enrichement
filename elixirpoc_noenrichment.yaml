# 1Ô∏è‚É£ Crear la Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: elixirpoc-noenrichment

---
# 2Ô∏è‚É£ Crear el Secret dentro de la Namespace
apiVersion: v1
kind: Secret
metadata:
  name: otel-secrets-noenrichment
  namespace: elixirpoc-noenrichment
type: Opaque
stringData:  # Usa stringData para evitar problemas con Base64
  OTEL_EXPORTER_OTLP_ENDPOINT: "https://xxxxxxxxxx/api/v2/otlp/v1/traces"
  OTEL_EXPORTER_OTLP_TOKEN: "Token"

---
# 3Ô∏è‚É£ Crear el Deployment con imagePullPolicy: Always
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hola-mundo-deployment-noenrichment
  namespace: elixirpoc-noenrichment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hola-mundo-noenrichment
  template:
    metadata:
      labels:
        app: hola-mundo-noenrichment
    spec:
      containers:
      - name: hola-mundo-noenrichment
        image: edunzz/elixir_otel:noenrichment
        imagePullPolicy: Always  # üîπ Fuerza a Kubernetes a descargar siempre la √∫ltima imagen
        ports:
        - containerPort: 4000
        env:
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: otel-secrets-noenrichment
              key: OTEL_EXPORTER_OTLP_ENDPOINT
        - name: OTEL_EXPORTER_OTLP_TOKEN
          valueFrom:
            secretKeyRef:
              name: otel-secrets-noenrichment
              key: OTEL_EXPORTER_OTLP_TOKEN

---
# 4Ô∏è‚É£ Crear el Service
apiVersion: v1
kind: Service
metadata:
  name: hola-mundo-service-noenrichment
  namespace: elixirpoc-noenrichment
spec:
  selector:
    app: hola-mundo-noenrichment
  type: LoadBalancer
  ports:
    - name: http
      port: 80           # Puerto p√∫blico expuesto
      targetPort: 4000   # Puerto interno de la app
